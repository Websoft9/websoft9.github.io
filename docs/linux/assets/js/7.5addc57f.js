(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{327:function(a,s,t){"use strict";t.r(s);var e=t(33),l=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"自动化运维"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动化运维"}},[a._v("#")]),a._v(" 自动化运维")]),a._v(" "),t("p",[a._v("Linux 命令行操作由于具备可编程，可控制的特征，天生就适合自动化管理。")]),a._v(" "),t("p",[a._v("Linux自动化运维技术有多种，比较流行的包括：Shell脚本、Ansible、Chef等自动化技术。")]),a._v(" "),t("p",[a._v("Websoft9提供的自动化部署以Ansible为核心技术，集合Shell脚本，实现复杂软件部署的全过程自动化。")]),a._v(" "),t("p",[a._v("同时，Linux系统也是非常重要的开发平台，延伸到开发领域的自动化，就诞生了DevOps技术：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://libs.websoft9.com/Websoft9/DocsPicture/zh/linux/devops-process.png",alt:""}})]),a._v(" "),t("blockquote",[t("p",[a._v("自动化技术的基石仍然是Linux命令")])]),a._v(" "),t("h2",{attrs:{id:"ansible"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ansible"}},[a._v("#")]),a._v(" Ansible")]),a._v(" "),t("p",[a._v("本节不是讲述Ansible的原理，而是用接近文科式的语言，阐述Ansible在实践中容易犯错的技术盲点，纠正错误的认知。")]),a._v(" "),t("h3",{attrs:{id:"箴言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#箴言"}},[a._v("#")]),a._v(" 箴言")]),a._v(" "),t("p",[a._v("如何成为Ansible高手？")]),a._v(" "),t("p",[a._v("Shell命令是根本，夯实基础稳步走；"),t("br"),a._v("\n晦涩理论看一遍，动手实验是正道。"),t("br"),a._v("\n经典教材床头放，官方文档经常看；"),t("br"),a._v("\n闲时看书有收获，勤动笔来总结多。"),t("br"),a._v("\n三人成行有我师，学会提问收获多；"),t("br"),a._v("\n疑难问题要会诊，切莫独钻死胡同。"),t("br"),a._v("\n稳定简约见功底，数据结构来撑腰；"),t("br"),a._v("\n软件没有终结日，长久迭代价值高。")]),a._v(" "),t("p",[a._v("学会驾驭Ansible，用通用的软件方法论去理解Ansible，千万不要被Ansible的技术术语所牵制。")]),a._v(" "),t("h3",{attrs:{id:"ansible-之-50-问"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ansible-之-50-问"}},[a._v("#")]),a._v(" Ansible 之 50 问")]),a._v(" "),t("h4",{attrs:{id:"ansible受控端是否必须提前安装python？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ansible受控端是否必须提前安装python？"}},[a._v("#")]),a._v(" Ansible受控端是否必须提前安装Python？")]),a._v(" "),t("p",[a._v("不是。Ansible的"),t("a",{attrs:{href:"https://docs.ansible.com/ansible/latest/modules/raw_module.html#raw-module",target:"_blank",rel:"noopener noreferrer"}},[a._v("raw"),t("OutboundLink")],1),a._v("模块和"),t("a",{attrs:{href:"https://docs.ansible.com/ansible/latest/modules/script_module.html#script-module",target:"_blank",rel:"noopener noreferrer"}},[a._v("script"),t("OutboundLink")],1),a._v("模块不依赖于客户端安装的Python来运行。从技术上讲，您可以使用Ansible使用raw模块安装兼容版本的Python ，然后使用该模块使用其他所有模块。例如，如果需要将Python 2引导到基于RHEL的系统上，则可以按以下方式安装它：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('ansible myhost --become -m raw -a "yum install -y python2"\n')])])]),t("h4",{attrs:{id:"主控端如何安装ansible最方便？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主控端如何安装ansible最方便？"}},[a._v("#")]),a._v(" 主控端如何安装Ansible最方便？")]),a._v(" "),t("p",[a._v("推荐采用 pip install ansible")]),a._v(" "),t("h4",{attrs:{id:"ansible-的应用模块好用吗？例如：docker-mysql等"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ansible-的应用模块好用吗？例如：docker-mysql等"}},[a._v("#")]),a._v(" Ansible 的应用模块好用吗？例如：Docker, MySQL等")]),a._v(" "),t("p",[a._v("建议弃用，直接使用命令更为稳定可靠，这样可以避免这边模块的版本兼容性问题")]),a._v(" "),t("h4",{attrs:{id:"ansible中的变量优先级有哪些？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ansible中的变量优先级有哪些？"}},[a._v("#")]),a._v(" Ansible中的变量优先级有哪些？")]),a._v(" "),t("p",[a._v("有高到低：ansible命令带入的变量 > cfg配置文件的变量 > 主项目的var变量 > role中的var变量 > role default 变量")]),a._v(" "),t("h4",{attrs:{id:"ansible有全局变量的概念吗？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ansible有全局变量的概念吗？"}},[a._v("#")]),a._v(" Ansible有全局变量的概念吗？")]),a._v(" "),t("p",[a._v("没有，但我们可以将：ansible命令带入的变量 | cfg配置文件的变量 | 主项目的var变量 视为全局变量。但特别需要注意的是：Ansible项目中即使有同名变量，它们不会共享一个内存区域，而是各自独占内存（区别于Java等语言变量指针的概念）。")]),a._v(" "),t("h4",{attrs:{id:"ansible-如何实现模块化？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ansible-如何实现模块化？"}},[a._v("#")]),a._v(" Ansible 如何实现模块化？")]),a._v(" "),t("p",[a._v("Ansible Galaxy 就是模块化唯一的方案")]),a._v(" "),t("h4",{attrs:{id:"ansible-中经常会出现-python-urllib3-之类的报错，如何处理？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ansible-中经常会出现-python-urllib3-之类的报错，如何处理？"}},[a._v("#")]),a._v(" Ansible 中经常会出现 python-urllib3 之类的报错，如何处理？")]),a._v(" "),t("p",[a._v("python-urllib3 报错大部分情况下，通过 yum install python-urllib3 解决，而不是 pip install")]),a._v(" "),t("h4",{attrs:{id:"ansible-中的条件判断有哪些可能性？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ansible-中的条件判断有哪些可能性？"}},[a._v("#")]),a._v(" Ansible 中的条件判断有哪些可能性？")]),a._v(" "),t("p",[a._v('True, not False, !=none, !="",')]),a._v(" "),t("h4",{attrs:{id:"ansbile-中python-pip-apt-yum-总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ansbile-中python-pip-apt-yum-总结"}},[a._v("#")]),a._v(" Ansbile 中Python Pip apt/yum 总结")]),a._v(" "),t("ol",[t("li",[a._v("客户端和服务端 python版本可以不一致")]),a._v(" "),t("li",[a._v("升级最新pip版本会导致 pip 命令无法使用 官方解释使用 python3 -m pip install xxx")]),a._v(" "),t("li",[a._v("apt lock 问题可以在脚本中预处理")])]),a._v(" "),t("h4",{attrs:{id:"ansbile-客户端和服务端-python版本是否可以不一致？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ansbile-客户端和服务端-python版本是否可以不一致？"}},[a._v("#")]),a._v(" Ansbile 客户端和服务端 Python版本是否可以不一致？")]),a._v(" "),t("p",[a._v("可以")]),a._v(" "),t("h4",{attrs:{id:"pip和pip3共存吗？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pip和pip3共存吗？"}},[a._v("#")]),a._v(" pip和pip3共存吗？")]),a._v(" "),t("p",[a._v("可以共存。但建议通过：python3 -m pip install xxx 这样的方式使用Python3下的pip，启用pip3这种表达方式")]),a._v(" "),t("h4",{attrs:{id:"为什么ansible中apt升级容易导致-lock？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么ansible中apt升级容易导致-lock？"}},[a._v("#")]),a._v(" 为什么Ansible中apt升级容易导致 lock？")]),a._v(" "),t("p",[a._v("AWS上非常容易出错，建议在脚本中预处理")]),a._v(" "),t("h4",{attrs:{id:"ansible-之pip模块是否可以制定python版本？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ansible-之pip模块是否可以制定python版本？"}},[a._v("#")]),a._v(" Ansible 之PIP模块是否可以制定Python版本？")]),a._v(" "),t("p",[a._v("可以，参考如下")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# Install (Bottle) for Python 3.3 specifically,using the 'pip3.3' executable.\n- pip:\n    name: bottle\n    executable: pip3.3\n")])])]),t("h4",{attrs:{id:"dnf-模块现在可以用吗？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dnf-模块现在可以用吗？"}},[a._v("#")]),a._v(" dnf 模块现在可以用吗？")]),a._v(" "),t("p",[a._v("现在不建议使用dnf模块")]),a._v(" "),t("h4",{attrs:{id:"一个ansible项目中，主入口文件中-vars-files-与-vars-哪个变量优先级高？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一个ansible项目中，主入口文件中-vars-files-与-vars-哪个变量优先级高？"}},[a._v("#")]),a._v(" 一个Ansible项目中，主入口文件中 "),t("em",[a._v("vars_files")]),a._v(" 与 "),t("em",[a._v("vars")]),a._v(" 哪个变量优先级高？")]),a._v(" "),t("p",[a._v("vars_files的优先级更高。需要注意的是Ansible的变量是无法覆盖的，即同名变量在内存中都有单独的存储区域，而Ansible只是通过优先级的方式使用。")])])}),[],!1,null,null,null);s.default=l.exports}}]);