(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{268:function(t,e,a){"use strict";a.r(e);var r=a(28),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"apache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apache"}},[t._v("#")]),t._v(" Apache")]),t._v(" "),a("p",[t._v("本章Apache具体指的是 Apache HTTP Server （"),a("a",{attrs:{href:"http://httpd.apache.org/docs/2.4/zh-cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1),t._v("）。Apache HTTP Server项目是为现代操作系统（包括UNIX和Windows）开发和维护开源HTTP服务器的一项工作。该项目的目标是提供一个安全，高效且可扩展的服务器，该服务器提供与当前HTTP标准同步的HTTP服务。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://libs.websoft9.com/Websoft9/DocsPicture/zh/linux/apachehttp-architecture.gif",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("p",[t._v("这里我们只介绍比较简单的在线安装方式：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# Installing on Fedora/CentOS/Red Hat Enterprise Linux\nsudo yum install httpd\nsudo systemctl enable httpd\nsudo systemctl start httpd\n\n# Installing on Ubuntu/Debian\nsudo apt install apache2\nsudo service apache2 start\n")])])]),a("blockquote",[a("p",[t._v("安装Apache的时候默认会安装核心特性与多处理模块(MPM)，其他的扩展模块可以后续自行安装。")])]),t._v(" "),a("h2",{attrs:{id:"模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块"}},[t._v("#")]),t._v(" 模块")]),t._v(" "),a("p",[t._v("安装模块之前，先查看当前已安装的所有模块，然后再决定是否安装，最后将已安装模块启用或停止。")]),t._v(" "),a("h3",{attrs:{id:"查看"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看"}},[t._v("#")]),t._v(" 查看")]),t._v(" "),a("p",[t._v("通过 "),a("code",[t._v("apachectl -M")]),t._v(" 命令可以查看已经安装的所有Apache模块。")]),t._v(" "),a("h3",{attrs:{id:"安装-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-2"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("p",[t._v("安装模块有yum/apt在线安装和源码编译安装两种方式，其中在线安装非常简单：")]),t._v(" "),a("h4",{attrs:{id:"在线安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在线安装"}},[t._v("#")]),t._v(" 在线安装")]),t._v(" "),a("p",[t._v("例如：准备在CentOS上安装 "),a("code",[t._v("mod_ssl")]),t._v(" 模块:")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("搜索 mod_ssl 是否存在")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("sudo yum search mod_ssl\n============================= N/S matched: mod_ssl =============================\nmod_ssl.x86_64 : SSL/TLS module for the Apache HTTP Server\n")])])])]),t._v(" "),a("li",[a("p",[t._v("搜索结果提示有一个 mod_ssl.x86_64 可用，接下来运行安装命令")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("sudo yum install mod_ssl\n")])])])]),t._v(" "),a("li",[a("p",[t._v("等待自动安装，直至安装完成")])])]),t._v(" "),a("h4",{attrs:{id:"源码编译安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#源码编译安装"}},[t._v("#")]),t._v(" 源码编译安装")]),t._v(" "),a("p",[t._v("如果在线搜索找不到所需的 Module, 就需要通过源码编译安装的方式安装新的模块。主要步骤如下：")]),t._v(" "),a("ol",[a("li",[t._v("安装 apxs 这个Apache模块管理工具以及配套工具"),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("yum install httpd-devel\nyum groupinstall 'Development tools'\n")])])])]),t._v(" "),a("li",[t._v("下载 Apache 源码到 /opt 目录，并解压之"),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cd /opt\nwget http://mirror.bit.edu.cn/apache//httpd/httpd-2.4.41.tar.gz\ntar xvf httpd-2.4.41.tar.gz\n")])])])]),t._v(" "),a("li",[t._v("以安装 mod_auth_form 模块为例，我们找到其所在的目录，然后运行编译命令"),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cd /opt/httpd-2.4.41/modules/aaa\nmod_auth_form.c\n")])])])]),t._v(" "),a("li",[t._v("编译成功，会增加一个模块配置文件：/usr/lib64/httpd/modules/mod_auth_form.so")])]),t._v(" "),a("blockquote",[a("p",[t._v("以上的源码编译安装方案来源于"),a("a",{attrs:{href:"https://www.hugeserver.com/kb/install-enable-mod_evasive-apache-module-centos7/",target:"_blank",rel:"noopener noreferrer"}},[t._v("此处"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"启停"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启停"}},[t._v("#")]),t._v(" 启停")]),t._v(" "),a("p",[t._v("需要注意的是，安装过的所有模块并不会全部被启用，即安装模块与启用是有区别的，只有安装之后才能被启用，被启用的模块也可以让它停止运行。接下来，我们讲解如何启停模块。")]),t._v(" "),a("p",[t._v("下面先介绍通过修改模块配置文件实现模块启用的方案：")]),t._v(" "),a("p",[t._v("以CentOS为例，我们打开Apache模块配置文件："),a("em",[t._v("/etc/httpd/conf.modules.d/00-base.conf")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("...\nLoadModule version_module modules/mod_version.so\nLoadModule vhost_alias_module modules/mod_vhost_alias.so\n#LoadModule buffer_module modules/mod_buffer.so\n#LoadModule watchdog_module modules/mod_watchdog.so\n...\n")])])]),a("p",[t._v("其中带“#”号的模块是没有启用的，如果需要启用，去掉“#”号，然后重启 Apache HTTP 服务即可。")]),t._v(" "),a("p",[t._v("修改Apache配置文件显得繁琐，可以安装通过"),a("code",[t._v("a2enmod")]),t._v("这个模块来管理Apache扩展模块的启停")]),t._v(" "),a("h2",{attrs:{id:"路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路径"}},[t._v("#")]),t._v(" 路径")]),t._v(" "),a("p",[t._v("不同的Linux发行版，对应的安装路径有一定的差异：")]),t._v(" "),a("h3",{attrs:{id:"centos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#centos"}},[t._v("#")]),t._v(" CentOS")]),t._v(" "),a("p",[t._v("Apache 安装目录："),a("em",[t._v("/etc/httpd")]),a("br"),t._v("\nApache 虚拟主机配置文件："),a("em",[t._v("/etc/httpd/conf.d/vhost.conf")]),a("br"),t._v("\nApache 主配置文件： "),a("em",[t._v("/etc/httpd/conf/httpd.conf")]),a("br"),t._v("\nApache 日志文件： "),a("em",[t._v("/var/log/httpd")]),a("br"),t._v("\nApache 模块配置文件： "),a("em",[t._v("/etc/httpd/conf.modules.d/00-base.conf")])]),t._v(" "),a("h3",{attrs:{id:"ubuntu"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu"}},[t._v("#")]),t._v(" Ubuntu")]),t._v(" "),a("p",[t._v("Apache 安装目录："),a("em",[t._v("/etc/apache2")]),a("br"),t._v("\nApache 虚拟主机配置文件："),a("em",[t._v("/etc/apache2/sites-available/000-default.conf")]),a("br"),t._v("\nApache 主配置文件： "),a("em",[t._v("/etc/apache2/apache2.conf")]),a("br"),t._v("\nApache 日志文件： "),a("em",[t._v("/var/log/apache2")]),a("br"),t._v("\nApache 模块目录： "),a("em",[t._v("/etc/apache2/mods-available")])]),t._v(" "),a("h2",{attrs:{id:"多处理模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多处理模块"}},[t._v("#")]),t._v(" 多处理模块")]),t._v(" "),a("p",[t._v("Apache HTTP 服务器被设计为一个功能强大，并且灵活的 web 服务器， 可以在很多平台与环境中工作。不同平台和不同的环境往往需要不同的特性，或可能以不同的方式实现相同的特性最有效率。")]),t._v(" "),a("p",[t._v("Apache httpd 通过模块化的设计来适应各种环境。这种设计允许网站管理员通过在编译时或运行时，选择哪些模块将会加载在服务器中，来选择服务器特性。")]),t._v(" "),a("p",[t._v("Apache提供一个名称为多处理模块(MPM)，用来接受请求， 以及调度子进程处理请求。")]),t._v(" "),a("p",[t._v("下表列出了不同系统的默认 MPM。如果你不在编译时选择，那么它就是你将要使用的 MPM。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("操作系统")]),t._v(" "),a("th",[t._v("MPM名称")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Netware")]),t._v(" "),a("td",[a("code",[t._v("mpm_netware")])])]),t._v(" "),a("tr",[a("td",[t._v("OS/2")]),t._v(" "),a("td",[a("code",[t._v("mpmt_os2")])])]),t._v(" "),a("tr",[a("td",[t._v("Unix")]),t._v(" "),a("td",[a("code",[t._v("prefork")]),t._v("，"),a("code",[t._v("worker")]),t._v(" 或 "),a("code",[t._v("event")]),t._v("，取决于平台特性")])]),t._v(" "),a("tr",[a("td",[t._v("Windows")]),t._v(" "),a("td",[a("code",[t._v("mpm_winnt")])])])])]),t._v(" "),a("h3",{attrs:{id:"查看-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看-2"}},[t._v("#")]),t._v(" 查看")]),t._v(" "),a("p",[t._v("以CentOS为例，查看当前系统的MPM模式，只需运行 "),a("code",[t._v("httpd -V")]),t._v(" 命令即可查看：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[root@lamp7 ~]# httpd -V\nServer version: Apache/2.4.6 (CentOS)\nServer built:   Aug  8 2019 11:41:18\nServer's Module Magic Number: 20120211:24\nServer loaded:  APR 1.4.8, APR-UTIL 1.5.2\nCompiled using: APR 1.4.8, APR-UTIL 1.5.2\nArchitecture:   64-bit\nServer MPM:     prefork\n  threaded:     no\n    forked:     yes (variable process count)\n")])])]),a("p",[t._v("另外，在Apache主配置文件："),a("em",[t._v("/etc/httpd/conf/httpd.conf")]),t._v(" 中，可以设置 prefork 的工作参数：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<IfModule prefork.c>\n   StartServers        5\n   MinSpareServers     5\n   MaxSpareServers     10\n   MaxClients          256\n   MaxRequestsPerChild 3000\n</IfModule>\n")])])]),a("h3",{attrs:{id:"切换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#切换"}},[t._v("#")]),t._v(" 切换")]),t._v(" "),a("p",[t._v("以CentOS为例，切换当前系统的MPM模式，编辑："),a("em",[t._v("/etc/httpd/conf.modules.d/00-mpm.conf")]),t._v(" 文件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("LoadModule mpm_prefork_module modules/mod_mpm_prefork.so\n#LoadModule mpm_worker_module modules/mod_mpm_worker.so\n#LoadModule mpm_event_module modules/mod_mpm_event.so\n")])])]),a("p",[t._v("通过去掉或增加“#”号的方式，选择一种MPM模式，重启Apache后生效")]),t._v(" "),a("h3",{attrs:{id:"比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#比较"}},[t._v("#")]),t._v(" 比较")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://libs.websoft9.com/Websoft9/DocsPicture/zh/linux/prefork-websoft9.png",alt:"prefork"}}),a("br"),t._v("\n图1：Prefork，每个子进程只有一个线程，在一个时间点内只能处理一个请求")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://libs.websoft9.com/Websoft9/DocsPicture/zh/linux/worker-websoft9.png",alt:"worker"}}),a("br"),t._v("\n图2：work，多进程和多线程的混合模式")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://libs.websoft9.com/Websoft9/DocsPicture/zh/linux/event-websoft9.png",alt:"event"}}),a("br"),t._v("\n图1：event，与worker类似，但是event解决了worker下长连接线程的阻塞问题")]),t._v(" "),a("p",[t._v("三种MPM模式之间的比较请参考：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.jianshu.com/p/2de515e958d6",target:"_blank",rel:"noopener noreferrer"}},[t._v("《Apache 工作的三种模式：Prefork、Worker、Events》"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/yu2006070-01/p/10303808.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《青蛙学Linux—Apache的MPM模式和httpd-mpm.conf》"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"可执行程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可执行程序"}},[t._v("#")]),t._v(" 可执行程序")]),t._v(" "),a("p",[t._v("可执行程序以服务的形式存在于Linux系统中：")]),t._v(" "),a("h3",{attrs:{id:"所有程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#所有程序"}},[t._v("#")]),t._v(" 所有程序")]),t._v(" "),a("p",[t._v("Apache HTTP 服务器包含的所有可执行程序如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("命令")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("httpd")]),t._v(" "),a("td",[t._v("Apache 服务器")])]),t._v(" "),a("tr",[a("td",[t._v("apachectl")]),t._v(" "),a("td",[t._v("Apache HTTP 服务器控制工具。")])]),t._v(" "),a("tr",[a("td",[t._v("ab")]),t._v(" "),a("td",[t._v("Apache HTTP 服务器性能基准工具。")])]),t._v(" "),a("tr",[a("td",[t._v("apxs")]),t._v(" "),a("td",[t._v("Apache 扩展工具。")])]),t._v(" "),a("tr",[a("td",[t._v("configure")]),t._v(" "),a("td",[t._v("配置源代码。")])]),t._v(" "),a("tr",[a("td",[t._v("dbmmanage")]),t._v(" "),a("td",[t._v("为基本认证创建和更新 DBM 格式的用户认证文件。")])]),t._v(" "),a("tr",[a("td",[t._v("fcgistarter")]),t._v(" "),a("td",[t._v("启动 FastCGI 程序。")])]),t._v(" "),a("tr",[a("td",[t._v("htcacheclean")]),t._v(" "),a("td",[t._v("清理磁盘缓存。")])]),t._v(" "),a("tr",[a("td",[t._v("htdigest")]),t._v(" "),a("td",[t._v("为摘要认证创建和更新用户认证文件。")])]),t._v(" "),a("tr",[a("td",[t._v("htdbm")]),t._v(" "),a("td",[t._v("操作 DBM 密码数据库。")])]),t._v(" "),a("tr",[a("td",[t._v("htpasswd")]),t._v(" "),a("td",[t._v("为基本认证创建和更新用户认证文件。")])]),t._v(" "),a("tr",[a("td",[t._v("httxt2dbm")]),t._v(" "),a("td",[t._v("为 RewriteMap 创建 dbm 文件。")])]),t._v(" "),a("tr",[a("td",[t._v("logresolve")]),t._v(" "),a("td",[t._v("将 Apache 日志文件中的 IP 地址解析到主机名称。")])]),t._v(" "),a("tr",[a("td",[t._v("log_server_status")]),t._v(" "),a("td",[t._v("周期性的记录服务器状态。")])]),t._v(" "),a("tr",[a("td",[t._v("rotatelogs")]),t._v(" "),a("td",[t._v("不关闭 Apache 而切换日志文件。")])]),t._v(" "),a("tr",[a("td",[t._v("split-logfile")]),t._v(" "),a("td",[t._v("将多个虚拟主机的日志文件按照主机拆分。")])]),t._v(" "),a("tr",[a("td",[t._v("suexec")]),t._v(" "),a("td",[t._v("执行外部程序前切换用户。")])])])]),t._v(" "),a("h3",{attrs:{id:"服务启停"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务启停"}},[t._v("#")]),t._v(" 服务启停")]),t._v(" "),a("p",[t._v("以 httpd 服务为例，在不同的操作系统启用如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("#CentOS or Redhat\nsystemctl start httpd\nsystemctl stop httpd\nsystemctl restart httpd\nsystemctl status httpd\n\n# Ubutnu\nsystemctl start apache2\nsystemctl stop apache2\nsystemctl restart apache2\nsystemctl status apache2\n")])])]),a("h2",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),a("p",[t._v("Apache HTTP Sever 提供了灵活的配置项，以帮助用户适用各种业务场景。")]),t._v(" "),a("h3",{attrs:{id:"配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[t._v("#")]),t._v(" 配置文件")]),t._v(" "),a("ul",[a("li",[t._v("主配置文件："),a("em",[t._v("/etc/httpd/conf/httpd.conf")])]),t._v(" "),a("li",[t._v("扩展配置文件："),a("em",[t._v("/etc/httpd/conf.d/")]),t._v(".conf*")])]),t._v(" "),a("p",[t._v("当Apache启动时，会加载/etc/httpd/conf.d/目录中的所有以.conf结尾的文件，做为配置文件来使用，所以管理员可以将配置推荐写在.conf中，如果将配置项写入主配置文件，系统升级时，配置项还要重新修改一遍，如果写在扩展配置项，则不存在此问题，同时也可以从繁杂的主配置文件中脱离出来。")]),t._v(" "),a("h3",{attrs:{id:"配置说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置说明"}},[t._v("#")]),t._v(" 配置说明")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("配置项")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("ServerTokens OS")]),t._v(" "),a("td",[t._v("系统信息,在访问出错时出现;把OS改为Minor,就不显示系统信息")])]),t._v(" "),a("tr",[a("td",[t._v("ServerSignature On")]),t._v(" "),a("td",[t._v("把On改为Off就连普通的系统都给隐藏起来;改为Email就会显示管理员的邮箱(邮箱需要另外配置 ServerAdmin )")])]),t._v(" "),a("tr",[a("td",[t._v("ServerAdmin root@localhost")]),t._v(" "),a("td",[t._v("管理员邮箱")])]),t._v(" "),a("tr",[a("td",[t._v("ServerName localhost")]),t._v(" "),a("td",[t._v("服务器的主机名,一般是用虚拟机来设置,通常这个值是自动指定的，推荐显式的指定它以防止启动时出错")])]),t._v(" "),a("tr",[a("td",[t._v("UseCanonicalName Off")]),t._v(" "),a("td",[t._v('设置为"On",Apache会使用ServerName指令的值  设置为 "Off"时,Apache会使用用户端提供的主机名和端口号。  如果有虚拟主机，必须设置为Off')])]),t._v(" "),a("tr",[a("td",[t._v('ServerRoot "/etc/httpd"')]),t._v(" "),a("td",[t._v("配置项的根目录，类似html里面的base;默认到这个路径里面找;")])]),t._v(" "),a("tr",[a("td",[t._v("PidFile run/httpd.pid")]),t._v(" "),a("td",[t._v("进程PID,位置在 /etc/httpd/run/httpd.pid,主进程决定着子进程")])]),t._v(" "),a("tr",[a("td",[t._v("Timeout 60")]),t._v(" "),a("td",[t._v("若60秒后没有收到或送出任何数据就切断该连接")])]),t._v(" "),a("tr",[a("td",[t._v("KeepAlive Off")]),t._v(" "),a("td",[t._v("是否开启持久化链接,访问网站时要对网站的很多资源,如css,js,image等等创建不同的链接;事实上我们可以建立一个持久化链接来应对多个请求;")])]),t._v(" "),a("tr",[a("td",[t._v("MaxKeepAliveRequests 100")]),t._v(" "),a("td",[t._v("一个持久化链接最多能应对多少个请求")])]),t._v(" "),a("tr",[a("td",[t._v("KeepAliveTimeout 15")]),t._v(" "),a("td",[t._v("15秒不链接就断开")])]),t._v(" "),a("tr",[a("td",[t._v("Listen 80")]),t._v(" "),a("td",[t._v("监听端口,默认是80，如果这里要更改为其他端口比如88的话,下面的ServerName localhost:88也得更改")])]),t._v(" "),a("tr",[a("td",[t._v("KeepAliveTimeout 15")]),t._v(" "),a("td",[t._v("15秒不链接就断开")])]),t._v(" "),a("tr",[a("td",[t._v("Include conf.d/*.conf")]),t._v(" "),a("td",[t._v("扩展配置文件")])]),t._v(" "),a("tr",[a("td",[t._v("User apache")]),t._v(" "),a("td",[t._v("Apache子进程所有者")])]),t._v(" "),a("tr",[a("td",[t._v("Group apache")]),t._v(" "),a("td",[t._v("Apache子进程所属组")])]),t._v(" "),a("tr",[a("td",[t._v("DirectoryIndex index.html index.html.var")]),t._v(" "),a("td",[t._v("默认主文件")])]),t._v(" "),a("tr",[a("td",[t._v('DocumentRoot "/var/www/html"')]),t._v(" "),a("td",[t._v("网站数据根目录")])]),t._v(" "),a("tr",[a("td",[t._v("ErrorDocument 404 /404.html")]),t._v(" "),a("td",[t._v("404可以通过PHP程序来处理(在框架中),可以通过rewrite来处理,但是最理想的模式是让Apache来处理")])]),t._v(" "),a("tr",[a("td",[t._v("Directory")]),t._v(" "),a("td",[t._v("定位目录 /(也就是Apache网站根目录)")])]),t._v(" "),a("tr",[a("td",[t._v("Indexes")]),t._v(" "),a("td",[t._v("如果访问的文件不存在，显示目录文件列表；要禁止的话前面加上一个 - （-indexes）")])]),t._v(" "),a("tr",[a("td",[t._v("FollowSymLinks")]),t._v(" "),a("td",[t._v("软链接")])]),t._v(" "),a("tr",[a("td",[t._v("AllowOverride")]),t._v(" "),a("td",[t._v("是否允许目录配置文件.htaccess有效ALL有效，None无效")])]),t._v(" "),a("tr",[a("td",[t._v("IfModule")]),t._v(" "),a("td",[t._v("如果存在模块mod_userdir.c...")])])])]),t._v(" "),a("p",[t._v("配置注意事项：")]),t._v(" "),a("ol",[a("li",[t._v("Apache对文件的操作就会用系统给的一个临时账号Apache作为第三方other来运行")]),t._v(" "),a("li",[t._v("Apache的配置规则是 "),a("strong",[t._v("后出现,先应用")]),t._v(" 后面的出现的配置会覆盖前面的。")]),t._v(" "),a("li",[t._v("以上配置都应该在扩展配置里面覆盖更改或增加;")])]),t._v(" "),a("h3",{attrs:{id:"常见问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[t._v("#")]),t._v(" 常见问题")]),t._v(" "),a("h4",{attrs:{id:"关闭apache-test-page"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关闭apache-test-page"}},[t._v("#")]),t._v(" 关闭Apache Test Page")]),t._v(" "),a("p",[t._v("使用 # 号将: /etc/httpd/conf.d/welcome.conf 中的所有内容全部注释掉，然后重启 Apache 服务")]),t._v(" "),a("h4",{attrs:{id:"关闭缺省情况目录列表可查看"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关闭缺省情况目录列表可查看"}},[t._v("#")]),t._v(" 关闭缺省情况目录列表可查看")]),t._v(" "),a("p",[t._v("Apache httpd服务器在缺省的情况下，开启了基于目录列表的访问，这是一个存在安全隐患的问题，因此可以关闭这个功能。")]),t._v(" "),a("h2",{attrs:{id:"伪静态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#伪静态"}},[t._v("#")]),t._v(" 伪静态")]),t._v(" "),a("p",[t._v("使用伪静态有三个步骤：")]),t._v(" "),a("ol",[a("li",[t._v("确保Rewrite模块（apache模块配置文件：/etc/httpd/conf.modules.d/00-base.conf）已经被加载（去掉LoadModule rewrite_module modules/mod_rewrite.so前面的#）。")]),t._v(" "),a("li",[t._v("虚拟主机配置文件中增加AllowOverride All")]),t._v(" "),a("li",[t._v("网站根目录中增加.htaccess文件，并配置伪静态规则")])]),t._v(" "),a("h3",{attrs:{id:"场景：重定向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#场景：重定向"}},[t._v("#")]),t._v(" 场景：重定向")]),t._v(" "),a("ol",[a("li",[t._v("开启Apache的rewrite模块")]),t._v(" "),a("li",[t._v("在网站根目录中增加.htaccess文件")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IfModule mod_rewrite.c"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nRewriteEngine On\nRedirect "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/empirecmsall-image-guide"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/xdocs/empirecms-image-guide"')]),t._v("\nRedirect "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/wordpress-image-guide"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/xdocs/wordpressold-image-guide"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/IfModule"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"场景：隐藏后缀名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#场景：隐藏后缀名"}},[t._v("#")]),t._v(" 场景：隐藏后缀名")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<IfModule mod_rewrite.c>\nRewriteRule ^test$ test.php\nErrorDocument 404 /404.txt\n\n</IfModule>\n\n")])])]),a("h2",{attrs:{id:"虚拟主机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚拟主机"}},[t._v("#")]),t._v(" 虚拟主机")]),t._v(" "),a("p",[t._v("Apache中的虚拟主机是通过VirtualHost进行配置的。")]),t._v(" "),a("p",[t._v("VirtualHost 改动务必准确无误，任何错误的修改都会导致服务器上所有的网站不可访问")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("VirtualHost 项")]),t._v(" "),a("th",[t._v("作用说明")]),t._v(" "),a("th",[t._v("必要性")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("ServerName")]),t._v(" "),a("td",[t._v("主域名")]),t._v(" "),a("td",[t._v("必须填写")])]),t._v(" "),a("tr",[a("td",[t._v("ServerAlias")]),t._v(" "),a("td",[t._v("辅域名")]),t._v(" "),a("td",[t._v("可以不填或删除")])]),t._v(" "),a("tr",[a("td",[t._v("DocumentRoot")]),t._v(" "),a("td",[t._v("网站存放目录，同下")]),t._v(" "),a("td",[t._v("务必准确无误")])]),t._v(" "),a("tr",[a("td",[t._v("Directory")]),t._v(" "),a("td",[t._v("网站存放目录，同上")]),t._v(" "),a("td",[t._v("务必准确无误")])]),t._v(" "),a("tr",[a("td",[t._v("ErrorLog")]),t._v(" "),a("td",[t._v("错误日志路径，系统会根据定义的路径产生相关日志文件")]),t._v(" "),a("td",[t._v("可以不填或删除")])]),t._v(" "),a("tr",[a("td",[t._v("CustomLog")]),t._v(" "),a("td",[t._v("访问日志路径，系统会根据定义的路径产生相关日志文件")]),t._v(" "),a("td",[t._v("可以不填或删除")])])])]),t._v(" "),a("h3",{attrs:{id:"http-virtualhost-template"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-virtualhost-template"}},[t._v("#")]),t._v(" HTTP VirtualHost template")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<VirtualHost *:80>\nServerName www.mydomain.com\nServerAlias other.mydomain.com\nDocumentRoot "/data/wwwroot/zdoo"\nErrorLog "/var/log/httpd/www.mydomain.com_error_apache.log"\nCustomLog "/var/log/httpd/www.mydomain.com_apache.log" common\n<Directory "/data/wwwroot/zdoo">\nOptions Indexes FollowSymlinks\nAllowOverride All\nRequire all granted\n</Directory>\n</VirtualHost>\n')])])]),a("h3",{attrs:{id:"apache-alias-template"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apache-alias-template"}},[t._v("#")]),t._v(" Apache Alias template")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('Alias /path /data/wwwroot/zdoo\n<Directory "/data/wwwroot/zdoo">\nOptions Indexes FollowSymlinks\nAllowOverride All\nRequire all granted\n</Directory>\n')])])]),a("h3",{attrs:{id:"apache-https-virtualhost-template"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apache-https-virtualhost-template"}},[t._v("#")]),t._v(" Apache HTTPS VirtualHost template")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<VirtualHost *:443>\nServerName  www.mydomain.com\nDocumentRoot "/data/wwwroot/zdoo"\n#ErrorLog "logs/www.mydomain.com-error_log"\n#CustomLog "logs/www.mydomain.com-access_log" common\n<Directory "/data/wwwroot/zdoo">\nOptions Indexes FollowSymlinks\nAllowOverride All\nRequire all granted\n</Directory>\nSSLEngine on\nSSLCertificateFile  /data/cert/www.mydomain.com.crt\nSSLCertificateKeyFile  /data/cert/www.mydomain.com.key\nSSLCertificateChainFile  /data/cert/root_bundle.crt\n</VirtualHost>\n')])])]),a("h3",{attrs:{id:"http跳转https"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http跳转https"}},[t._v("#")]),t._v(" HTTP跳转HTTPS")]),t._v(" "),a("h4",{attrs:{id:"方案一：修改-htaccess文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方案一：修改-htaccess文件"}},[t._v("#")]),t._v(" 方案一：修改.htaccess文件")]),t._v(" "),a("p",[t._v(".htaccess文件提供了一种目录级别的修改配置的方式。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("#任何情况下均强制跳转\nRewriteCond %{HTTPS} off\nRewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]\n\n\n#指定域名下的自动跳转\nRewriteEngine On \nRewriteCond %{HTTP_HOST} ^yourdomain\\.com [NC]\nRewriteCond %{SERVER_PORT} 80 \nRewriteRule ^(.*)$ https://www.yourdomain.com/$1 [R,L]\n\n#指定文件夹的自动跳转\nRewriteEngine On \nRewriteCond %{SERVER_PORT} 80 \nRewriteCond %{REQUEST_URI} folder \nRewriteRule ^(.*)$ https://www.yourdomain.com/folder/$1 [R,L]\n\n")])])]),a("h4",{attrs:{id:"方案二：修改vhost文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方案二：修改vhost文件"}},[t._v("#")]),t._v(" 方案二：修改vhost文件")]),t._v(" "),a("p",[t._v("要想开启自动跳转功能，请确保 Apache 的 Rewirte 模块加载，然后按照以下方案进行设置：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("整站跳转\n如果需要整站跳转，则在网站的配置文件（/etc/http/vhost/vhost.conf）的 <Directory> 标签内添加：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(" RewriteEngine on\n RewriteCond %{SERVER_PORT} !^443$\n RewriteRule ^(.*)?$ https://%{SERVER_NAME}/$1 [L,R=301]\n")])])])]),t._v(" "),a("li",[a("p",[t._v("只对某个目录的页面进行自动跳转，请将 "),a("strong",[t._v("yourfolder")]),t._v(" 改成自己的目录名")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(" RewriteEngine on\n RewriteBase /yourfolder\n RewriteCond %{SERVER_PORT} !^443$\n #RewriteRule ^(.*)?$ https://%{SERVER_NAME}/$1 [L,R]\n RewriteRule ^.*$ https://%{SERVER_NAME}%{REQUEST_URI} [L,R=301]\n")])])])]),t._v(" "),a("li",[a("p",[t._v("只将带 www 的 URL 跳转至 HTTPS，请将 "),a("strong",[t._v("www.yourdomain.com")]),t._v(" 改成自己想要设置跳转的域名")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(" RewriteEngine On \n RewriteRule ^/(.*)$ www.yourdomain.com/$1 [R=301]\n")])])])]),t._v(" "),a("li",[a("p",[t._v("对除了某一个页面的其他所有页面进行 HTTPS 跳转")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(" RewriteEngine on \n RewriteCond %{SERVER_PORT} !^443$ \n RewriteCond %{REQUEST_URI} !^/tz.php \n RewriteRule (.*) https://%{SERVER_NAME}/$1 [R]\n")])])]),a("p",[t._v("这段配置的作用是指除了 /tz.php 页面用 http 访问，其他页面均为 https 访问，/tz.php 可改为自己实际要 http 访问的后缀。")])])]),t._v(" "),a("h3",{attrs:{id:"默认首页"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#默认首页"}},[t._v("#")]),t._v(" 默认首页")]),t._v(" "),a("p",[t._v("默认访问目录之时，系统会自动根据顺序寻找列出的页面，并显示其中一个。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<VirtualHost *:80>\nServerName win.websoft9.com\n<IfModule dir_module>\n  DirectoryIndex index.hmtl defalut.html README.html readme.html about.html\n</IfModule>\nDocumentRoot "/data/wwwroot/default/site"\n...\n')])])]),a("h3",{attrs:{id:"禁用ip访问-防止恶意解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#禁用ip访问-防止恶意解析"}},[t._v("#")]),t._v(" 禁用IP访问,防止恶意解析")]),t._v(" "),a("hr"),t._v(" "),a("ol",[a("li",[t._v("给指定网站程序设置域名")]),t._v(" "),a("li",[t._v("将一下内容加入 "),a("code",[t._v("/etc/httpd/conf/httpd.conf")]),t._v(" 的末尾或者在 "),a("code",[t._v("/etc/httpd/conf.d/")]),t._v(" 目录下新建一个 "),a("code",[t._v("deny-ip.conf")]),t._v("的文件将内容写入"),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<VirtualHost *:80>\n  ServerName 服务器IP地址\n  <Location />\n       Order Allow,Deny\n       Deny from all\n  </Location>\n</VirtualHost>\n\n<VirtualHost *:443>\n   ServerName 服务器IP地址\n   SSLEngine on\n   SSLCertificateFile /etc/pki/tls/certs/localhost.crt\n   SSLCertificateKeyFile /etc/pki/tls/private/localhost.key\n   <Location />\n     Order Allow,Deny\n     Deny from all\n   </Location>\n</VirtualHost>\n")])])])]),t._v(" "),a("li",[t._v("重启 apache"),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("systemctl restart httpd\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代理"}},[t._v("#")]),t._v(" 代理")]),t._v(" "),a("p",[t._v("Apache中的代理即 mod_proxy 模块，它用于  URL的转发，即具有代理的功能。应用此功能，可以很方便的实现同 Tomcat 等应用服务器的整合，甚至可以很方便的实现 Web 集群的功能。")]),t._v(" "),a("p",[t._v("Apache 代理相关的模块包括：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mod_proxy\nproxy_ajp_module (shared)\nproxy_balancer_module (shared)\nproxy_connect_module (shared)\nproxy_express_module (shared)\nproxy_fcgi_module (shared)\nproxy_fdpass_module (shared)\nproxy_ftp_module (shared)\nproxy_http_module (shared)\nproxy_scgi_module (shared)\nproxy_wstunnel_module (shared)\n")])])]),a("p",[t._v("下面是一个包含了 Proxy 的虚拟主机配置文件，其中应用程序运行在8069端口，通过转发配置域名访问。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<VirtualHost *:80>\nServerAdmin webmaster@dummy-host2.localhost\nServerName youdomain.com\nProxyRequests off\n<Proxy *>\nOrder deny,allow\nAllow from all\n</Proxy>\nProxyPass / http://172.21.172.27:8069/\nProxyPassReverse / http://172.21.172.27:8069/\n</VirtualHost>\n")])])]),a("p",[t._v("Apache代理使用详情参考："),a("a",{attrs:{href:"http://httpd.apache.org/docs/2.4/mod/mod_proxy.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《Apache模块mod_proxy》"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日志"}},[t._v("#")]),t._v(" 日志")]),t._v(" "),a("p",[t._v("为了有效地管理Web服务器，有必要获取有关服务器的活动和性能以及可能发生的任何问题的反馈。Apache HTTP Server提供了非常全面和灵活的日志记录功能。")]),t._v(" "),a("p",[t._v("Apache标准日志包括：访问日志和错误日志两种")]),t._v(" "),a("h3",{attrs:{id:"模块-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块-2"}},[t._v("#")]),t._v(" 模块")]),t._v(" "),a("p",[t._v("与日志相关的模块包括：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mod_log_config\nmod_log_forensic\nmod_logio\nmod_cgi\n")])])]),a("h3",{attrs:{id:"访问日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#访问日志"}},[t._v("#")]),t._v(" 访问日志")]),t._v(" "),a("p",[t._v("Apache 访问日志在实际工作中非常有用，比较典型的例子是进行网站流量统计，查看用户访问时间、地理位置分布、页面点击率等。Apache 的访问日志具有如下4个方面的作用：")]),t._v(" "),a("ul",[a("li",[t._v("记录访问服务器的远程主机IP 地址，从而可以得知浏览者来自何处；")]),t._v(" "),a("li",[t._v("记录浏览者访问的Web资源，可以了解网站中的哪些部分最受欢迎；")]),t._v(" "),a("li",[t._v("记录浏览者使用的浏览器，可以根据大多数浏览者使用的浏览器对站点进行优化；")]),t._v(" "),a("li",[t._v("记录浏览者的访问时间；")])]),t._v(" "),a("h3",{attrs:{id:"错误日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#错误日志"}},[t._v("#")]),t._v(" 错误日志")]),t._v(" "),a("p",[t._v("服务器错误日志（由ErrorLog伪指令设置名称和位置）是最重要的日志文件。Apache httpd将在此处发送诊断信息并记录其在处理请求时遇到的任何错误。当启动服务器或服务器操作出现问题时，它是第一个查看的地方，因为它通常包含发生问题的原因以及如何解决的详细信息。")]),t._v(" "),a("p",[t._v("错误日志的格式由ErrorLogFormat指令定义，您可以使用该指令自定义要记录的值。如果未指定格式，则默认为格式定义。典型的日志消息如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[Fri Sep 09 10:42:29.902022 2011] [core:error] [pid 35708:tid 4328636416] [client 72.15.99.187] File does not exist: /usr/local/apache2/htdocs/favicon.ico\n")])])]),a("p",[t._v("日志条目中的第一项是消息的日期和时间。接下来是产生消息的模块（在这种情况下为核心）和消息的严重性级别。紧随其后的是遇到该条件的进程的进程ID，如果合适，还包括线程ID。接下来，我们有发出请求的客户地址。最后是详细的错误消息，在这种情况下，该错误消息表示请求的文件不存在。")]),t._v(" "),a("h2",{attrs:{id:"缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[t._v("#")]),t._v(" 缓存")]),t._v(" "),a("p",[t._v("Apache HTTP服务器提供了一系列缓存功能，这些缓存功能旨在以各种方式提高服务器的性能。")]),t._v(" "),a("p",[t._v("详情参考官方文档："),a("a",{attrs:{href:"http://httpd.apache.org/docs/2.4/caching.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("缓存指南"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安全"}},[t._v("#")]),t._v(" 安全")]),t._v(" "),a("p",[t._v("大多数情况下，Web服务器受到威胁，并不是因为HTTP Server代码中的问题。而是来自附加代码，CGI脚本或基础操作系统的问题。因此，您必须始终注意系统上所有软件的问题和更新。")]),t._v(" "),a("h3",{attrs:{id:"更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新"}},[t._v("#")]),t._v(" 更新")]),t._v(" "),a("p",[t._v("Apache HTTP Server在安全性方面有良好记录，并且开发人员社区高度关注安全性问题。但是，不可避免的是，某些问题（无论大小）都会在发布后在软件中发现。因此，保持对软件更新的了解至关重要。如果您直接从Apache获得HTTP Server的版本，我们强烈建议您订阅"),a("a",{attrs:{href:"http://httpd.apache.org/lists.html#http-announce",target:"_blank",rel:"noopener noreferrer"}},[t._v("Apache HTTP Server"),a("OutboundLink")],1),t._v("公告列表，在其中可以随时了解新版本和安全更新。")]),t._v(" "),a("h3",{attrs:{id:"dos攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dos攻击"}},[t._v("#")]),t._v(" DoS攻击")]),t._v(" "),a("p",[t._v("最有效的反DoS工具通常是防火墙或其他操作系统配置。例如，大多数防火墙可以配置为限制来自任何单个IP地址或网络的同时连接数，从而防止一系列简单的攻击。当然，这对分布式拒绝服务攻击（DDoS）没有帮助。")]),t._v(" "),a("p",[t._v("但Apache HTTP Server配置设置可以帮助缓解问题：")]),t._v(" "),a("ul",[a("li",[t._v("RequestReadTimeout")]),t._v(" "),a("li",[t._v("TimeOut")]),t._v(" "),a("li",[t._v("KeepAliveTimeout")]),t._v(" "),a("li",[t._v("MaxRequestWorkers")])]),t._v(" "),a("h3",{attrs:{id:"apache-ssl-tls-加密"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apache-ssl-tls-加密"}},[t._v("#")]),t._v(" Apache SSL/TLS 加密")]),t._v(" "),a("p",[t._v("Apache的mod_ssl模块基于OpenSSL，它使用安全套接字层和传输层安全协议提供了强加密。")]),t._v(" "),a("h4",{attrs:{id:"原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),a("p",[t._v("下图是典型的使用 SSL 加密的网页认证连接流程：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://libs.websoft9.com/Websoft9/DocsPicture/zh/linux/client-ssl-auth.png",alt:"ssl认证"}})]),t._v(" "),a("h4",{attrs:{id:"配置-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置-2"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),a("p",[t._v("下面配置段是典型的HTTPS设置项")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('LoadModule ssl_module modules/mod_ssl.so\nListen 443\n<VirtualHost *:443>\n    ServerName www.example.com\n    SSLEngine on\n    SSLCertificateFile "/path/to/www.example.com.cert"\n    SSLCertificateKeyFile "/path/to/www.example.com.key"\n</VirtualHost>\n')])])]),a("h2",{attrs:{id:"运行环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行环境"}},[t._v("#")]),t._v(" 运行环境")]),t._v(" "),a("p",[t._v("Apache可以作为常见的开发语言的 Web 服务器，集成数据库、应用容器，最后形成一个完整的应用运行环境，例如：Apache+PHP，Apache+Tomcat+Java等")]),t._v(" "),a("p",[t._v("下面我们以常见的开发语言为例，分别介绍它们是如何与Apache一起工作的。")]),t._v(" "),a("h3",{attrs:{id:"php"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#php"}},[t._v("#")]),t._v(" PHP")]),t._v(" "),a("p",[t._v("Apache被广泛用于PHP环境，Apache有两种PHP处理机制：")]),t._v(" "),a("ul",[a("li",[t._v("php-fpm：PHP内核中用来处理PHP文件的解释器和进程管理器")]),t._v(" "),a("li",[t._v("mod_php：Apache的PHP处理模块")])]),t._v(" "),a("p",[t._v("mod_php 作为Apache的模块，没有独立的进程，无需额外设置和处理，使用起来非常简单。")]),t._v(" "),a("p",[t._v("PHP-FPM(PHP FastCGI Process Manager)意：PHP FastCGI 进程管理器，用于管理PHP 进程池的软件，用于接受Apache HTTP Server等Web服务器的请求。PHP-FPM提供了更好的PHP进程管理方式，可以有效控制内存和进程、可以平滑重载PHP配置。")]),t._v(" "),a("p",[t._v("下面是Apache+PHP-FPM共同工作的系统架构图，其中mod_proxy_fcgi用于Apache连接php-fpm")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://libs.websoft9.com/Websoft9/DocsPicture/zh/linux/apache_event_php-fpm.jpg",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"java"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java"}},[t._v("#")]),t._v(" Java")]),t._v(" "),a("p",[t._v("Apache HTTP Server 无法直接运行Java程序，而是与Tomcat一起组合去部署Java程序。")]),t._v(" "),a("p",[t._v("这种组合下，Apache处理静态资源，JSP等动态程序需转发给Tomcat处理，然后返回给用户。")]),t._v(" "),a("p",[t._v("Apache HTTP Server 与 Tomcat 最常见的连接方式是http_proxy，即利用 Apache 自带的 mod_proxy 模块使用代理技术来连接 Tomcat。")]),t._v(" "),a("p",[t._v("http_proxy 模式是基于 HTTP 协议的代理，因此它要求 Tomcat 必须提供 HTTP 服务，也就是说必须启用 Tomcat 的 HTTP Connector。一个最简单的配置如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ProxyPass /images !\nProxyPass /css !\nProxyPass /js !\nProxyPass / http://localhost:8080/\n")])])]),a("p",[t._v("更多请参考："),a("a",{attrs:{href:"https://www.ibm.com/developerworks/cn/opensource/os-lo-apache-tomcat/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《Apache HTTP Server 与 Tomcat 的三种连接方式介绍》"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"python"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python"}},[t._v("#")]),t._v(" Python")]),t._v(" "),a("p",[t._v("Apache HTTP Server 也可以用于Python环境，通过扩展模块mod_proxy_uwsgi，连接Python的uWSGI服务器或Gunicorn服务器，便可以解析Python程序。")]),t._v(" "),a("p",[t._v("这种组合的的基本配置方法如下：")]),t._v(" "),a("ol",[a("li",[t._v("配置为uwsgi.ini"),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[uwsgi]\nchdir = /home/vagrant/myweb/\nvirtualenv = /home/vagrant/env/\nsocket = 127.0.0.1:8080\nenv = DJANGO_SETTINGS_MODULE=myweb.settings\nmodule =myweb.wsgi:application\nmaster = true\nprocesses = 4\nvacuum = True\nmax-requests = 5000\ndaemonize = /var/log/uwsgi.log\npidfile = /var/log/uwsgi.pid\n")])])])]),t._v(" "),a("li",[t._v("apache的配置文件加载mod_proxy_uwsgi.so")]),t._v(" "),a("li",[t._v("apache的配置文件反向代理到uwsgi"),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ProxyPass / uwsgi://127.0.0.1:8080\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"node-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js"}},[t._v("#")]),t._v(" Node.js")]),t._v(" "),a("p",[t._v("Apache HTTP Server 也可以用于Node.js环境，Apache HTTP Server 与 Node.js 最常见的连接方式是http_proxy，即利用 Apache 自带的 mod_proxy 模块使用代理技术来连接 Node.js。")]),t._v(" "),a("p",[t._v("下面是典型的配置文件范例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("server {\n        listen 80 default_server;\n        server_name _;\n\n\n        location / {\n         proxy_pass http://127.0.0.1:2368;\n         proxy_set_header Host $host;\n         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        }\n\n}\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);