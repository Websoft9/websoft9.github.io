(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{216:function(t,e,r){"use strict";r.r(e);var a=r(0),i=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"parameters"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[t._v("#")]),t._v(" Parameters")]),t._v(" "),r("p",[t._v("This Redmine pre-configure packages use the "),r("a",{attrs:{href:"https://gitlab.com/gitlab-org/omnibus-gitlab",target:"_blank",rel:"noopener noreferrer"}},[t._v("Omnibus Redmine"),r("OutboundLink")],1),t._v(" for installation and configuration. Omnibus Redmine is a way to package different services and tools required to run Redmine, so that most users can install it without laborious configuration.")]),t._v(" "),r("h2",{attrs:{id:"architecture"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#architecture"}},[t._v("#")]),t._v(" Architecture")]),t._v(" "),r("p",[t._v("This is a simplified architecture diagram that can be used to understand Redmine’s architecture.")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://libs.websoft9.com/Websoft9/DocsPicture/en/gitlab/architecture_simplified.png",alt:"Redmine Architecture"}})]),t._v(" "),r("h2",{attrs:{id:"components-and-version"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#components-and-version"}},[t._v("#")]),t._v(" Components and Version")]),t._v(" "),r("p",[t._v("There many componets packaged in Redmine("),r("a",{attrs:{href:"https://docs.gitlab.com/ee/development/architecture.html#component-list",target:"_blank",rel:"noopener noreferrer"}},[t._v("view lists"),r("OutboundLink")],1),t._v("), you can see it from the file: "),r("em",[t._v("/opt/gitlab/version-manifest.txt")]),t._v(" on your Server")]),t._v(" "),r("h2",{attrs:{id:"path"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#path"}},[t._v("#")]),t._v(" Path")]),t._v(" "),r("h3",{attrs:{id:"redmine"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redmine"}},[t._v("#")]),t._v(" Redmine")]),t._v(" "),r("p",[t._v("Redmine configuration file: "),r("em",[t._v("/etc/gitlab/gitlab.rb")]),r("br"),t._v("\nRedmine and all components: "),r("em",[t._v("/opt/gitlab")]),r("br"),t._v("\nRedmine Repository storage directory: "),r("em",[t._v("/var/opt/gitlab/git-data")]),r("br"),t._v("\nRedmine backup directory: "),r("em",[t._v("/var/opt/gitlab/backups")])]),t._v(" "),r("h3",{attrs:{id:"unicorn"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#unicorn"}},[t._v("#")]),t._v(" Unicorn")]),t._v(" "),r("p",[t._v("Unicorn logs direcotry: "),r("em",[t._v("/var/log/gitlab/unicorn")])]),t._v(" "),r("h3",{attrs:{id:"sidekiq"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sidekiq"}},[t._v("#")]),t._v(" Sidekiq")]),t._v(" "),r("p",[t._v("Unicorn logs directory: "),r("em",[t._v("/var/log/gitlab/sidekiq")])]),t._v(" "),r("h3",{attrs:{id:"nginx"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[t._v("#")]),t._v(" Nginx")]),t._v(" "),r("p",[t._v("Nginx logs directory: "),r("em",[t._v("/var/log/gitlab/nginx")]),r("br"),t._v("\nNginx configuration file: "),r("em",[t._v("/var/opt/gitlab/nginx/conf/nginx.conf")]),r("br"),t._v("\nRedmine core Nginx configuration file:  "),r("em",[t._v("/var/opt/gitlab/nginx/conf/gitlab-http.conf")])]),t._v(" "),r("h3",{attrs:{id:"postgresql"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#postgresql"}},[t._v("#")]),t._v(" PostgreSQL")]),t._v(" "),r("p",[t._v("PostgreSQL installation directory: "),r("em",[t._v("/var/opt/gitlab/postgresql")]),r("br"),t._v("\nPostgreSQL logs directory: "),r("em",[t._v("/var/log/gitlab/postgresql")]),r("br"),t._v("\nPostgreSQL-Exporter logs directory: "),r("em",[t._v("/var/log/gitlab/postgres-exporter")]),r("br"),t._v("\nPostgreSQL data direcoty: "),r("em",[t._v("/var/opt/gitlab/postgresql/data")])]),t._v(" "),r("h3",{attrs:{id:"redis"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[t._v("#")]),t._v(" Redis")]),t._v(" "),r("p",[t._v("Redis installation directory: "),r("em",[t._v("/var/opt/gitlab/redis")]),r("br"),t._v("\nRedis logs directory: "),r("em",[t._v("/var/log/gitlab/redis")])]),t._v(" "),r("h2",{attrs:{id:"ports"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ports"}},[t._v("#")]),t._v(" Ports")]),t._v(" "),r("p",[t._v("You can view all the used ports from the official docs "),r("a",{attrs:{href:"https://docs.gitlab.com/omnibus/package-information/defaults.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Package defaults"),r("OutboundLink")],1),t._v(" . You can control(open or shut down) ports by "),r("strong",[r("a",{attrs:{href:"https://support.websoft9.com/docs/faq/zh/tech-instance.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Security Group Setting"),r("OutboundLink")],1)]),t._v(" of your Cloud Server whether the port can be accessed from Internet.")]),t._v(" "),r("p",[t._v("These ports should be opened for this application:")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("Name")]),t._v(" "),r("th",[t._v("Number")]),t._v(" "),r("th",[t._v("Use")]),t._v(" "),r("th",[t._v("Necessity")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("HTTP")]),t._v(" "),r("td",[t._v("80")]),t._v(" "),r("td",[t._v("HTTP requests for Metabase")]),t._v(" "),r("td",[t._v("Required")])]),t._v(" "),r("tr",[r("td",[t._v("HTTPS")]),t._v(" "),r("td",[t._v("443")]),t._v(" "),r("td",[t._v("HTTPS requests Metabase")]),t._v(" "),r("td",[t._v("Optional")])])])])])}),[],!1,null,null,null);e.default=i.exports}}]);